generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Country {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  name        String   @unique
  description String?
  departures  Flight[] @relation("FlightFromCountry") // Many-to-many relation
  arrivals    Flight[] @relation("FlightToCountry") // Many-to-many relation
  transfers   Flight[] @relation("FlightTransfers") // Many-to-many relation
}

model Airline {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  logo    String?
  tickets Ticket[] @relation("TicketAirline") // Many-to-many relation
}

model Flight {
  id            Int       @id @default(autoincrement())
  number        String    @unique
  departureTime DateTime  @default(now())
  arrivalTime   DateTime  @default(now())
  duration      Int?
  tickets       Ticket[]  @relation("FlightTickets") // Many-to-many relation
  transfers     Country[] @relation("FlightTransfers") // Many-to-many relation
  from          Country   @relation("FlightFromCountry", fields: [fromId], references: [id])
  fromId        Int
  to            Country   @relation("FlightToCountry", fields: [toId], references: [id])
  toId          Int
}

model Ticket {
  id             Int      @id @default(autoincrement())
  flights        Flight[] @relation("FlightTickets") // Many-to-many relation
  price          Int
  airline        Airline  @relation("TicketAirline", fields: [airlineId], references: [id])
  airlineId      Int
  totalTransfers Int?
  totalDuration  Int?
  optimalIndex   Int?
}
